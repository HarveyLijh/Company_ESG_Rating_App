{"version":3,"sources":["images/avatars/0.jpg","data/CEIS.csv","data/weights.csv","components/common/PageTitle.js","utils/chart.js","components/common/Agency.js","views/Company.js","components/layout/MainNavbar/NavbarSearch.js","components/layout/MainNavbar/NavbarNav/Notifications.js","flux/constants.js","components/layout/MainNavbar/NavbarNav/UserActions.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainNavbar/NavbarToggle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PageTitle","_ref","title","subtitle","className","attrs","Object","objectWithoutProperties","classes","classNames","react_default","a","createElement","shards_react_es","assign","xs","sm","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","this","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","Agency","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","canvasRef","React","createRef","chartOptions","objectSpread","maintainAspectRatio","responsive","legend","display","tooltips","mode","enabled","intersect","callbacks","label","tooltipItem","Number","yLabel","hover","elements","point","radius","tension","xAxes","gridLines","ticks","beginAtZero","yAxes","scaleLabel","isplay","suggestedMax","Math","max","apply","toConsumableArray","chartData","data","chartConfig","type","labels","chartLabels","datasets","options","current","_this$props","variation","agency_name","season","value","increase","percentage","cardClasses","concat","cardBodyClasses","innerWrapperClasses","dataFieldClasses","agencyClasses","valueClasses","innerDataFieldClasses","canvasHeight","small","height","ref","shortid","Component","defaultProps","create","Company","agency_props","fluid","noGutters","common_PageTitle","map","stats","idx","key","common_Agency","id","decrease","md","fill","borderWidth","backgroundColor","borderColor","barPercentage","NavbarSearch","seamless","placeholder","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","to","htmlBefore","htmlAfter","MainNavbar","Store","registerToActions","bind","assertThisInitialized","toggleSidebar","register","actionType","payload","Constants","emit","callback","on","removeListener","EventEmitter","layout","stickyTop","CEIS","require","weights","Papa","App","company_CEIS","agency_weights","that","parse","header","download","skipEmptyLines","complete","result","setCEIS","console","log","setWeights","tag","layout_MainNavbar_MainNavbar","views_Company","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c926f6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.73476783.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CEIS.899764ed.csv\";","module.exports = __webpack_public_path__ + \"static/media/weights.2b69550d.csv\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\nimport Chart from \"../../utils/chart\";\n\nclass Agency extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          mode: 'index',\n          enabled: true,\n          intersect: false,\n          callbacks: {\n            label: function(tooltipItem) {\n                return '在此等级中共有'+Number(tooltipItem.yLabel) + '家公司';\n            }\n          }\n          // custom: function (tooltipModel) {\n          //   // Tooltip Element\n          //   var tooltipEl = document.getElementById('chartjs-tooltip');\n\n          //   // Create element on first render\n          //   if (!tooltipEl) {\n          //     tooltipEl = document.createElement('div');\n          //     tooltipEl.id = 'chartjs-tooltip';\n          //     tooltipEl.innerHTML = '<table></table>';\n          //     document.body.appendChild(tooltipEl);\n          //   }\n\n          //   // Hide if no tooltip\n          //   if (tooltipModel.opacity === 0) {\n          //     tooltipEl.style.opacity = 0;\n          //     return;\n          //   }\n\n          //   // Set caret Position\n          //   tooltipEl.classList.remove('above', 'below', 'no-transform');\n          //   if (tooltipModel.yAlign) {\n          //     tooltipEl.classList.add(tooltipModel.yAlign);\n          //   } else {\n          //     tooltipEl.classList.add('no-transform');\n          //   }\n\n          //   function getBody(bodyItem) {\n          //     var lines = bodyItem.lines[0];\n          //     return lines.split(\":\")[1];\n          //   }\n\n          //   // Set Text\n          //   if (tooltipModel.body) {\n          //     var titleLines = tooltipModel.title || [];\n          //     var bodyLines = tooltipModel.body.map(getBody);\n\n          //     var innerHtml = '<thead>';\n\n          //     titleLines.forEach(function (title) {\n          //       innerHtml += '<tr><th>' + title;\n          //     });\n\n          //     bodyLines.forEach(function (body, i) {\n          //       var colors = tooltipModel.labelColors[i];\n          //       var style = 'background:black'\n          //       style += '; border-color:' + colors.borderColor;\n          //       style += '; border-width: 2px';\n          //       style += '; margin-top: -2px';\n          //       var span = '<span style=\"' + style + '\"></span>';\n          //       innerHtml += span + body;\n          //     });\n          //     innerHtml += '</th></tr></thead>';\n\n          //     var tableRoot = tooltipEl.querySelector('table');\n          //     tableRoot.innerHTML = innerHtml;\n          //   }\n\n          //   // `this` will be the overall tooltip\n          //   var position = this._chart.canvas.getBoundingClientRect();\n\n          //   // Display, position, and set styles for font\n          //   tooltipEl.style.opacity = 1;\n          //   tooltipEl.style.position = 'absolute';\n          //   tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';\n          //   tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY + 'px';\n          //   tooltipEl.style.fontFamily = tooltipModel._bodyFontFamily;\n          //   tooltipEl.style.fontSize = tooltipModel.bodyFontSize + 'px';\n          //   tooltipEl.style.fontStyle = tooltipModel._bodyFontStyle;\n          //   tooltipEl.style.padding = tooltipModel.yPadding + 'px ' + tooltipModel.xPadding + 'px';\n          //   tooltipEl.style.pointerEvents = 'none';\n\n          // }\n        },\n        hover: {\n          mode: 'index',\n          intersect: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                beginAtZero: true,\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                beginAtZero: true,\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n              }\n            }\n          ]\n        },\n        // shows labels above bars\n        // animation: {\n        //   duration: 1,\n        //   onComplete: function () {\n        //     var chartInstance = this.chart,\n        //       ctx = chartInstance.ctx;\n        //     ctx.textAlign = 'center';\n        //     ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n        //     ctx.textBaseline = 'bottom';\n\n        //     this.data.datasets.forEach(function (dataset, i) {\n        //       var meta = chartInstance.controller.getDatasetMeta(i);\n        //       meta.data.forEach(function (bar, index) {\n        //         console.log(chartInstance.chart.config.data.labels)\n        //         var data = chartInstance.chart.config.data.labels[index];\n        //         ctx.fillText(data, bar._model.x, bar._model.y - 5);\n\n        //       });\n        //     });\n        //   }\n        // }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"bar\",\n        data: {\n          ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { variation, agency_name, season, value, percentage, increase } = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\",\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const agencyClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    const innerDataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation !== \"1\" && \"text-right align-items-center\"\n    );\n\n    const percentageClasses = classNames(\n      \"stats-small__percentage\",\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n    );\n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={agencyClasses}>{agency_name}</span>\n              <span className={agencyClasses}>{season}</span>\n              <h6 className={valueClasses}>{value}</h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              {/* <span className={percentageClasses}>{percentage}</span> */}\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nAgency.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The agency_name.\n   */\n  agency_name: PropTypes.string,\n  /**\n  * The rating season.\n  */\n  season: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array\n};\n\nAgency.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  agency_name: \"Agency\",\n  season: \"\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default Agency;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport PageTitle from \"../components/common/PageTitle\";\nimport Agency from \"../components/common/Agency\";\n// import UsersOverview from \"./../components/blog/UsersOverview\";\n// import UsersByDevice from \"./../components/blog/UsersByDevice\";\n// import NewDraft from \"./../components/blog/NewDraft\";\n// import Discussions from \"./../components/blog/Discussions\";\n// import TopReferrals from \"./../components/common/TopReferrals\";\n\nconst Company = ({ agency_props }) => (\n  <Container fluid className=\"main-content-container px-4\">\n    {/* Page Header */}\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle title=\"Blog Overview\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n    </Row>\n\n    {/* Small Stats Blocks */}\n    <Row>\n      {agency_props.map((stats, idx) => (\n        <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n          <Agency\n            id={`small-stats-${idx}`}\n            variation=\"1\"\n            chartData={stats.datasets}\n            chartLabels={stats.chartLabels}\n            // chartOptions={stats.chartOptions}\n            agency_name={stats.agency_name}\n            season={stats.season}\n            value={stats.value}\n            percentage={stats.percentage}\n            increase={stats.increase}\n            decrease={stats.decrease}\n          />\n        </Col>\n      ))}\n    </Row>\n\n    {/* <Row> */}\n    {/* Users Overview */}\n    {/* <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <UsersOverview />\n      </Col> */}\n\n    {/* Users by Device */}\n    {/* <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n        <UsersByDevice />\n      </Col> */}\n\n    {/* New Draft */}\n    {/* <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n        <NewDraft />\n      </Col> */}\n\n    {/* Discussions */}\n    {/* <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <Discussions />\n      </Col> */}\n\n    {/* Top Referrals */}\n    {/* <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <TopReferrals />\n      </Col>\n    </Row> */}\n  </Container>\n);\n\nCompany.propTypes = {\n  /**\n   * The small stats dataset.\n   */\n  agency_props: PropTypes.array\n};\n\nCompany.defaultProps = {\n  agency_props: [\n    {\n      agency_name: \"Posts\",\n      season: \"2020Q4\",\n      value: \"2,390\",\n      percentage: \"4.7%\",\n      increase: true,\n      chartLabels: [\"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\"],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Agency\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n          borderColor: \"rgb(0, 184, 216)\",\n          data: [1, 1, 2, 1, 3, 5, 4, 7],\n          barPercentage: 1.0,\n        }\n      ],\n    },\n    {\n      agency_name: \"Pages\",\n      season: \"2020Q2\",\n      value: \"182\",\n      percentage: \"12.4\",\n      increase: true,\n      chartLabels: [\"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\"],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Agency\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(23,198,113,0.1)\",\n          borderColor: \"rgb(23,198,113)\",\n          data: [1, 2, 3, 3, 3, 4, 4],\n          barPercentage: 1.0,\n        }\n      ]\n    },\n    {\n      agency_name: \"Comments\",\n      season: \"2020Q3\",\n      value: \"8,147\",\n      percentage: \"3.8%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [\"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\"],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Agency\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: [2, 3, 3, 3, 4, 3, 3],\n          barPercentage: 1.0,\n        }\n      ]\n    },\n    {\n      agency_name: \"New Customers\",\n      season: \"2019Q1\",\n      value: \"29\",\n      percentage: \"2.71%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [\"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\", \"Rate\"],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Agency\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,65,105,0.1)\",\n          borderColor: \"rgb(255,65,105)\",\n          data: [1, 7, 1, 3, 1, 4, 8],\n          barPercentage: 1.0,\n        }\n      ]\n    },\n  ]\n};\n\nexport default Company;\n","import React from \"react\";\nimport {\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n      </InputGroupAddon>\n      <FormInput\n        className=\"navbar-search\"\n        placeholder=\"Search for something...\"\n      />\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\n\nexport default class Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n  }\n\n  toggleNotifications() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem className=\"border-right dropdown notifications\">\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">&#xE7F4;</i>\n            <Badge pill theme=\"danger\">\n              2\n            </Badge>\n          </div>\n        </NavLink>\n        <Collapse\n          open={this.state.visible}\n          className=\"dropdown-menu dropdown-menu-small\"\n        >\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE6E1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">Analytics</span>\n              <p>\n                Your website’s active users count increased by{\" \"}\n                <span className=\"text-success text-semibold\">28%</span> in the\n                last week. Great job!\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE8D1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">Sales</span>\n              <p>\n                Last week your store’s sales count decreased by{\" \"}\n                <span className=\"text-danger text-semibold\">5.52%</span>. It\n                could have been worse!\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem className=\"notification__all text-center\">\n            View all Notifications\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\n\nexport default class UserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={require(\"./../../../../images/avatars/0.jpg\")}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">Sierra Brooks</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link} to=\"user-profile\">\n            <i className=\"material-icons\">&#xE7FD;</i> Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"edit-user-profile\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"file-manager-list\">\n            <i className=\"material-icons\">&#xE2C7;</i> Files\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"transaction-history\">\n            <i className=\"material-icons\">&#xE896;</i> Transactions\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem tag={Link} to=\"/\" className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"Blog Dashboard\",\n      to: \"/blog-overview\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Blog Posts\",\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n      to: \"/blog-posts\",\n    },\n    {\n      title: \"Add New Post\",\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\n      to: \"/add-new-post\",\n    },\n    {\n      title: \"Forms & Components\",\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\n      to: \"/components-overview\",\n    },\n    {\n      title: \"Tables\",\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n      to: \"/tables\",\n    },\n    {\n      title: \"User Profile\",\n      htmlBefore: '<i class=\"material-icons\">person</i>',\n      to: \"/user-profile-lite\",\n    },\n    {\n      title: \"Errors\",\n      htmlBefore: '<i class=\"material-icons\">error</i>',\n      to: \"/errors\",\n    }\n  ];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSearch />\n          {/* <NavbarNav /> */}\n          {/* <NavbarToggle /> */}\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// import { MemoryRouter as Router, Route } from \"react-router-dom\";\n\n// import routes from \"./routes\";\nimport Company from \"./views/Company\";\n// import withTracker from \"./withTracker\";\nimport { Container, Row, Col } from \"shards-react\";\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\n\nvar CEIS = require(\"./data/CEIS.csv\");\nvar weights = require(\"./data/weights.csv\");\nvar Papa = require(\"papaparse/papaparse.min.js\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.company_CEIS = null;\n    this.agency_weights = null;\n  }\n  componentDidMount() {\n    var that = this\n    // parse CEIS data\n    Papa.parse(CEIS, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: function (result) {\n\n        that.setCEIS(result);\n      }\n    });// parse weights data\n    console.log(Papa.parse(weights, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: function (result) {\n\n        that.setWeights(result);\n      }\n    }));\n   \n  }\n   setCEIS(result) {\n    this.company_CEIS = result;\n    console.log(this.company_CEIS)\n  }\n   setWeights(result) {\n    this.agency_weights = result;\n    console.log( this.agency_weights)\n  }\n  render() {\n    //search\n    return (\n      <Container fluid>\n        <Row>\n\n          <Col\n            className=\"main-content p-0\"\n            sm=\"12\"\n            tag=\"main\"\n          >\n            <MainNavbar />\n\n            <Company />\n            {/* {!noFooter && <MainFooter />} */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}